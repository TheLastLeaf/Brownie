<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.brownie.reply.service.impl.ReplyMapper">
    <insert id="insert" parameterType="hashMap">
        <![CDATA[
        INSERT INTO BROWNIE_BOARD_REPLY(BOARD_SEQ,
                                        IN_USER_ID,
                                        ]]>
        <if test='headReplySeq != null and !headReplySeq.equals("")'>
            <![CDATA[
                                        HEAD_REPLY_SEQ,
                                        ]]>
        </if>
        <![CDATA[
                                        UP_USER_ID,
                                        REPLY_CONTENT
                                                                              ]]>
        <if test='status != null and !status.equals("")'>
            <![CDATA[
                                      , STATUS
                                        ]]>
        </if>
        <![CDATA[
                                        )
        VALUES (#{boardSeq},
                #{userId},
                ]]>
        <if test='headReplySeq != null and !headReplySeq.equals("")'>
            <![CDATA[
                #{headReplySeq},
                                        ]]>
        </if>
        <![CDATA[
                #{userId},
                #{replyContent}
                                                                                              ]]>
        <if test='status != null and !status.equals("")'>
            <![CDATA[
              , #{status}
                                        ]]>
        </if>
        <![CDATA[
                )
        ]]>
    </insert>

    <select id="selectList" parameterType="hashMap" resultType="kr.co.brownie.reply.service.ReplyVO">
        <![CDATA[
        SELECT LV,
               REPLYSEQ,
               REPLYCONTENT,
               REPLYINDATE,
               REPLYINUSERID,
               REPLYUPDATE,
               REPLYUPUSERID,
               BOARDSEQ,
               HEADREPLYSEQ,
               BOARDSTATUS,
               USERID,
               LOLID,
               NICKNAME,
               BLACKSTACK,
               USERSTATUS,
               USERINDATE,
               USERUPDATE,
               USERINUSERID,
               USERUPUSERID,
               USERPOSITION,
               BROWNIEPOINT,
               LIKECNT,
               UNLIKECNT
        FROM (SELECT ROWNUM AS RN,
                     REPLY.*
              FROM (SELECT LEVEL                               AS LV,
                           BROWNIE_BOARD_REPLY.REPLY_SEQ       AS REPLYSEQ,
                           BROWNIE_BOARD_REPLY.REPLY_CONTENT   AS REPLYCONTENT,
                           BROWNIE_BOARD_REPLY.IN_DATE         AS REPLYINDATE,
                           BROWNIE_BOARD_REPLY.IN_USER_ID      AS REPLYINUSERID,
                           BROWNIE_BOARD_REPLY.UP_DATE         AS REPLYUPDATE,
                           BROWNIE_BOARD_REPLY.UP_USER_ID      AS REPLYUPUSERID,
                           BROWNIE_BOARD_REPLY.BOARD_SEQ       AS BOARDSEQ,
                           BROWNIE_BOARD_REPLY.HEAD_REPLY_SEQ  AS HEADREPLYSEQ,
                           BROWNIE_BOARD_REPLY.STATUS          AS BOARDSTATUS,
                           BROWNIE_USER.USER_ID                AS USERID,
                           BROWNIE_USER.LOL_ID                 AS LOLID,
                           BROWNIE_USER.NICK_NAME              AS NICKNAME,
                           BROWNIE_USER.BLACK_STACK            AS BLACKSTACK,
                           BROWNIE_USER.STATUS                 AS USERSTATUS,
                           BROWNIE_USER.IN_DATE                AS USERINDATE,
                           BROWNIE_USER.UP_DATE                AS USERUPDATE,
                           BROWNIE_USER.IN_USER_ID             AS USERINUSERID,
                           BROWNIE_USER.UP_USER_ID             AS USERUPUSERID,
                           BROWNIE_USER.USER_POSITION          AS USERPOSITION,
                           BROWNIE_USER.BROWNIE_POINT          AS BROWNIEPOINT,
                           BROWNIE_BOARD_REPLY_LIKE.LIKE_CNT   AS LIKECNT,
                           BROWNIE_BOARD_REPLY_LIKE.UNLIKE_CNT AS UNLIKECNT
                    FROM (SELECT *
                          FROM BROWNIE_BOARD_REPLY
                          WHERE BROWNIE_BOARD_REPLY.BOARD_SEQ = ${boardSeq}
                         ) BROWNIE_BOARD_REPLY
                             INNER JOIN BROWNIE_USER ON BROWNIE_BOARD_REPLY.IN_USER_ID = BROWNIE_USER.USER_ID
                             LEFT OUTER JOIN (SELECT REPLY_SEQ,
                                                     LIKE_CNT,
                                                     UNLIKE_CNT
                                              FROM (SELECT REPLY_SEQ, KIND FROM BROWNIE_BOARD_REPLY_LIKE) PIVOT (
                                                  COUNT(*)
                                                  FOR KIND
                                                  IN (1 AS LIKE_CNT, 0 AS UNLIKE_CNT))) BROWNIE_BOARD_REPLY_LIKE
                                             ON BROWNIE_BOARD_REPLY.REPLY_SEQ = BROWNIE_BOARD_REPLY_LIKE.REPLY_SEQ
                    START WITH BROWNIE_BOARD_REPLY.HEAD_REPLY_SEQ IS NULL
                    CONNECT BY PRIOR BROWNIE_BOARD_REPLY.REPLY_SEQ = BROWNIE_BOARD_REPLY.HEAD_REPLY_SEQ
                   ) REPLY
             )
              ]]>
        <if test='replyPerPage != null and !replyPerPage.equals("") and pageNum != null and !pageNum.equals("")'>
            <![CDATA[
        WHERE ${contentPerPage} * (${pageNum} - 1) < RN
          AND RN <= ${contentPerPage} * ${pageNum}
        ]]>
        </if>
    </select>

    <select id="select" parameterType="hashMap" resultType="kr.co.brownie.reply.service.ReplyVO">
        SELECT LV,
               REPLYSEQ,
               REPLYCONTENT,
               REPLYINDATE,
               REPLYINUSERID,
               REPLYUPDATE,
               REPLYUPUSERID,
               BOARDSEQ,
               HEADREPLYSEQ,
               BOARDSTATUS,
               USERID,
               LOLID,
               NICKNAME,
               BLACKSTACK,
               USERSTATUS,
               USERINDATE,
               USERUPDATE,
               USERINUSERID,
               USERUPUSERID,
               USERPOSITION,
               BROWNIEPOINT,
               LIKECNT,
               UNLIKECNT
        FROM (SELECT LEVEL                               AS LV,
                     BROWNIE_BOARD_REPLY.REPLY_SEQ       AS REPLYSEQ,
                     BROWNIE_BOARD_REPLY.REPLY_CONTENT   AS REPLYCONTENT,
                     BROWNIE_BOARD_REPLY.IN_DATE         AS REPLYINDATE,
                     BROWNIE_BOARD_REPLY.IN_USER_ID      AS REPLYINUSERID,
                     BROWNIE_BOARD_REPLY.UP_DATE         AS REPLYUPDATE,
                     BROWNIE_BOARD_REPLY.UP_USER_ID      AS REPLYUPUSERID,
                     BROWNIE_BOARD_REPLY.BOARD_SEQ       AS BOARDSEQ,
                     BROWNIE_BOARD_REPLY.HEAD_REPLY_SEQ  AS HEADREPLYSEQ,
                     BROWNIE_BOARD_REPLY.STATUS          AS BOARDSTATUS,
                     BROWNIE_USER.USER_ID                AS USERID,
                     BROWNIE_USER.LOL_ID                 AS LOLID,
                     BROWNIE_USER.NICK_NAME              AS NICKNAME,
                     BROWNIE_USER.BLACK_STACK            AS BLACKSTACK,
                     BROWNIE_USER.STATUS                 AS USERSTATUS,
                     BROWNIE_USER.IN_DATE                AS USERINDATE,
                     BROWNIE_USER.UP_DATE                AS USERUPDATE,
                     BROWNIE_USER.IN_USER_ID             AS USERINUSERID,
                     BROWNIE_USER.UP_USER_ID             AS USERUPUSERID,
                     BROWNIE_USER.USER_POSITION          AS USERPOSITION,
                     BROWNIE_USER.BROWNIE_POINT          AS BROWNIEPOINT,
                     BROWNIE_BOARD_REPLY_LIKE.LIKE_CNT   AS LIKECNT,
                     BROWNIE_BOARD_REPLY_LIKE.UNLIKE_CNT AS UNLIKECNT
              FROM (SELECT *
                    FROM BROWNIE_BOARD_REPLY
                    WHERE BROWNIE_BOARD_REPLY.BOARD_SEQ = ${boardSeq}
                   ) BROWNIE_BOARD_REPLY
                       INNER JOIN BROWNIE_USER ON BROWNIE_BOARD_REPLY.IN_USER_ID = BROWNIE_USER.USER_ID
                       LEFT OUTER JOIN (SELECT REPLY_SEQ,
                                               LIKE_CNT,
                                               UNLIKE_CNT
                                        FROM (SELECT REPLY_SEQ, KIND FROM BROWNIE_BOARD_REPLY_LIKE) PIVOT (
                                            COUNT(*)
                                            FOR KIND
                                            IN (1 AS LIKE_CNT, 0 AS UNLIKE_CNT))) BROWNIE_BOARD_REPLY_LIKE
                                       ON BROWNIE_BOARD_REPLY.REPLY_SEQ = BROWNIE_BOARD_REPLY_LIKE.REPLY_SEQ
              START WITH BROWNIE_BOARD_REPLY.HEAD_REPLY_SEQ IS NULL
              CONNECT BY PRIOR BROWNIE_BOARD_REPLY.REPLY_SEQ = BROWNIE_BOARD_REPLY.HEAD_REPLY_SEQ
             )
        WHERE REPLYSEQ = #{replySeq}
    </select>

    <update id="update" parameterType="hashMap">
        <![CDATA[
        UPDATE BROWNIE_BOARD_REPLY
        SET UP_DATE       = SYSDATE
        ]]>
        <if test='replyContent != null and !replyContent.equals("")'>
            <![CDATA[
          , REPLY_CONTENT = #{replyContent}
                                ]]>
        </if>
        <if test='userId != null and !userId.equals("")'>
            <![CDATA[
          , UP_USER_ID = #{userId}
                                ]]>
        </if>
        <if test='status != null and !status.equals("")'>
            <![CDATA[
          , STATUS = #{status}
                                ]]>
        </if>
        <![CDATA[
        WHERE BROWNIE_BOARD_REPLY.REPLY_SEQ = #{replySeq}
        ]]>
    </update>

    <delete id="delete" parameterType="hashMap">
        DELETE
        FROM BROWNIE_BOARD_REPLY
        WHERE REPLY_SEQ = #{replySeq}
    </delete>
</mapper>