<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.brownie.reply.service.impl.ReplyMapper">

	<select id="boardReplyCnt" resultType="int">
		 SELECT COUNT(REPLY_SEQ) as replyCnt
		 FROM REPLY
		 WHERE BOARD_SEQ = #{boardSeq}
	</select>

	<select id="replyOnBoard" resultType="kr.co.brownie.reply.service.ReplyVO">
   		SELECT
			RE.REPLY_SEQ AS REPLYSEQ,
			RE.REPLY_CONTENT AS REPLYCONTENT,
			RE.IN_DATE AS INDATE,
			RE.IN_USER_ID AS INUSERID,
			RE.UP_DATE AS MODDATE,
			RE.UP_USER_ID AS UPUSERID,
			RE.BOARD_SEQ AS BOARDSEQ,
			RE.HEAD_REPLY_SEQ AS HEADREPLYSEQ,
			RE.STATUS AS STATUS,
            BU.NICK_NAME AS NICKNAME,
            NVL(LH.LCNT,0) AS LIKECNT,
            NVL(LH.HCNT,0) AS HATECNT
		FROM
			BROWNIE_USER BU,
            REPLY RE
        LEFT JOIN
        	(
            SELECT REPLY_SEQ, "0" AS LCNT, "1" AS HCNT
            FROM (SELECT REPLY_SEQ, KIND
            FROM LIKE_REPLY)
            PIVOT ( COUNT(*) FOR KIND IN (0, 1))
            ) LH
        ON
        	(LH.REPLY_SEQ = RE.REPLY_SEQ)
		WHERE
			RE.IN_USER_ID = BU.IN_USER_ID
        AND
			RE.HEAD_REPLY_SEQ = 0
		AND
			RE.BOARD_SEQ = #{boardSeq}
		ORDER BY RE.IN_DATE
	</select>

	<select id="replyOnReply" resultType="kr.co.brownie.reply.service.ReplyVO">
		SELECT
			RE.REPLY_SEQ as replySeq,
			RE.REPLY_CONTENT as replyContent,
			RE.IN_DATE as inDate,
			RE.IN_USER_ID as inUserId,
			RE.UP_DATE as modDate,
			RE.UP_USER_ID as upUserId,
			RE.BOARD_SEQ as boardSeq,
			RE.HEAD_REPLY_SEQ as headReplySeq,
			RE.STATUS AS STATUS,
            BU.NICK_NAME AS nickName
		FROM
			REPLY RE, BROWNIE_USER BU
		WHERE
			RE.IN_USER_ID = BU.IN_USER_ID
		AND
			HEAD_REPLY_SEQ = #{replySeq}
	</select>

	<select id="selectReplyStance" parameterType="hashMap" resultType="kr.co.brownie.reply.service.ReplyVO">
		SELECT
			REPLY_SEQ as replySeq,
			KIND as likeHateKind,
			IN_DATE as inDate,
			IN_USER_ID as inUserId,
			UP_DATE as modDate,
			UP_USER_ID as upUserId
		FROM
			LIKE_REPLY
        WHERE
        	REPLY_SEQ = #{replySeq}
        AND
        	IN_USER_ID = #{inUserId}
	</select>

	<delete id="deleteReplyStance" parameterType="hashMap">
		DELETE FROM LIKE_REPLY
        WHERE
        	REPLY_SEQ = #{replySeq}
        AND
        	IN_USER_ID = #{inUserId}
	</delete>

	<update id="updateReplyStance" parameterType="hashMap">
  	 	MERGE INTO
			LIKE_REPLY
		USING DUAL
		ON
			(reply_SEQ = #{replySeq} AND IN_USER_ID = #{inUserId})
		WHEN MATCHED THEN
			UPDATE SET
				UP_USER_ID = #{inUserId},
				KIND = #{kind}
		WHEN NOT MATCHED THEN
			INSERT (
				REPLY_SEQ,
				KIND,
				IN_DATE,
				IN_USER_ID,
				UP_DATE,
				UP_USER_ID
			) VALUES(
				#{replySeq},
				#{kind},
				SYSDATE,
				#{inUserId},
				SYSDATE,
				#{inUserId}
			)
	</update>

	<select id="replyLHCnt" resultType="kr.co.brownie.reply.service.ReplyVO">
		SELECT REPLY_SEQ, "0" as LIKECNT, "1" as HATECNT
		FROM (SELECT REPLY_SEQ, KIND
		FROM LIKE_REPLY)
		PIVOT (
		    COUNT(*)
		    FOR KIND
		    IN (0, 1)
		)
		WHERE REPLY_SEQ = #{replySeq}
	</select>


	<insert id="replyToBoard">
		INSERT INTO REPLY
			(
				REPLY_SEQ,
				REPLY_CONTENT,
				IN_DATE,
				IN_USER_ID,
				UP_DATE,
				UP_USER_ID,
				BOARD_SEQ,
				HEAD_REPLY_SEQ,
				STATUS
			)
			VALUES
			(
				REPLY_SEQ.NEXTVAL,
				#{replyContent},
				SYSDATE,
				#{inUserId},
				SYSDATE,
				#{inUserId},
				#{boardSeq},
				0,
				'y'
			)
	</insert>

	<insert id="replyToReply">
		INSERT INTO REPLY
			(
				REPLY_SEQ,
				REPLY_CONTENT,
				IN_DATE,
				IN_USER_ID,
				UP_DATE,
				UP_USER_ID,
				BOARD_SEQ,
				HEAD_REPLY_SEQ,
				STATUS
			)
		VALUES
			(
				REPLY_SEQ.NEXTVAL,
				#{replyContent},
				SYSDATE,
				#{inUserId},
				SYSDATE,
				#{inUserId},
				#{boardSeq},
				#{headReplySeq},
				'y'
			)
	</insert>


</mapper>