<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.brownie.board.service.impl.BoardMapper">
    <select id="count" parameterType="hashMap" resultType="int">
        <![CDATA[
        SELECT COUNT(*)
        FROM (SELECT *
              FROM BROWNIE_BOARD
              WHERE 1=1
        ]]>
        <if test="boardSeq isNotNull and boardSeq isNotEmpty">
            <![CDATA[
                AND BROWNIE_BOARD.BOARD_SEQ = #{boardSeq}
        ]]>
        </if>
        <if test="boardKind isNotNull and boardKind isNotEmpty">
            <![CDATA[
                AND UPPER(BROWNIE_BOARD.BOARD_KIND) = UPPER(#{boardKind})
        ]]>
        </if>
        <if test="boardCategory isNotNull and boardCategory isNotEmpty">
            <![CDATA[
                AND UPPER(BROWNIE_BOARD.BOARD_CATEGORY) = UPPER(#{boardCategory})
        ]]>
        </if>
        <if test="title isNotNull and title isNotEmpty">
            <![CDATA[
                AND UPPER(BROWNIE_BOARD.TITLE) LIKE UPPER('%'||#{title}||'%')
        ]]>
        </if>
        <if test="content isNotNull and content isNotEmpty">
            <![CDATA[
                AND UPPER(BROWNIE_BOARD.CONTENT) LIKE UPPER('%'||#{content}||'%')
        ]]>
        </if>
        <if test="noticeYn isNotNull and noticeYn isNotEmpty">
            <![CDATA[
                AND UPPER(BROWNIE_BOARD.NOTICE_YN) = UPPER(#{noticeYn})
        ]]>
        </if>
        <if test="boardStatus isNotNull and boardStatus isNotEmpty">
            <![CDATA[
                AND UPPER(BROWNIE_BOARD.STATUS) = UPPER(#{boardStatus})
        ]]>
        </if>
        <![CDATA[
                ) BROWNIE_BOARD
                     INNER JOIN (SELECT *
                                 FROM BROWNIE_USER
                                 WHERE 1=1
                                    ]]>
        <if test="nickName isNotNull and nickName isNotEmpty">
            <![CDATA[
                                   AND UPPER(NICK_NAME) = UPPER(#{nickName})
        ]]>
        </if>
        <if test="userId isNotNull and userId isNotEmpty">
            <![CDATA[
                                   AND UPPER(USER_ID) = UPPER(#{userId})
        ]]>
        </if>
        <![CDATA[
                                   ) BROWNIE_USER ON BROWNIE_BOARD.IN_USER_ID = BROWNIE_USER.USER_ID
        ]]>
    </select>

    <select id="selectList" parameterType="hashMap" resultType="kr.co.brownie.board.service.BoardVO">
        <![CDATA[
        SELECT BOARDSEQ,
               BOARDKIND,
               BOARDCATEGORY,
               TITLE,
               CONTENT,
               NOTICEYN,
               BOARDSTATUS,
               BOARDINDATE,
               BOARDINUSERID,
               BOARDUPDATE,
               BOARDUPUSERID,
               FILESEQ,
               SUBSEQ,
               USERID,
               LOLID,
               NICKNAME,
               BLACKSTACK,
               USERSTATUS,
               USERINDATE,
               USERUPDATE,
               USERINUSERID,
               USERUPUSERID,
               USERPOSITION,
               BROWNIEPOINT,
               REPLYCNT,
               HITCNT,
               LIKECNT,
               UNLIKECNT
        FROM (SELECT ROWNUM AS RN,
                     *
              FROM (SELECT BROWNIE_BOARD.BOARD_SEQ       AS BOARDSEQ,
                           BROWNIE_BOARD.BOARD_KIND      AS BOARDKIND,
                           BROWNIE_BOARD.BOARD_CATEGORY  AS BOARDCATEGORY,
                           BROWNIE_BOARD.TITLE           AS TITLE,
                           BROWNIE_BOARD.CONTENT         AS CONTENT,
                           BROWNIE_BOARD.NOTICE_YN       AS NOTICEYN,
                           BROWNIE_BOARD.STATUS          AS BOARDSTATUS,
                           BROWNIE_BOARD.IN_DATE         AS BOARDINDATE,
                           BROWNIE_BOARD.IN_USER_ID      AS BOARDINUSERID,
                           BROWNIE_BOARD.UP_DATE         AS BOARDUPDATE,
                           BROWNIE_BOARD.UP_USER_ID      AS BOARDUPUSERID,
                           BROWNIE_BOARD.FILE_SEQ        AS FILESEQ,
                           BROWNIE_BOARD.SUB_SEQ         AS SUBSEQ,
                           BROWNIE_USER.USER_ID          AS USERID,
                           BROWNIE_USER.LOL_ID           AS LOLID,
                           BROWNIE_USER.NICK_NAME        AS NICKNAME,
                           BROWNIE_USER.BLACK_STACK      AS BLACKSTACK,
                           BROWNIE_USER.STATUS           AS USERSTATUS,
                           BROWNIE_USER.IN_DATE          AS USERINDATE,
                           BROWNIE_USER.UP_DATE          AS USERUPDATE,
                           BROWNIE_USER.IN_USER_ID       AS USERINUSERID,
                           BROWNIE_USER.UP_USER_ID       AS USERUPUSERID,
                           BROWNIE_USER.USER_POSITION    AS USERPOSITION,
                           BROWNIE_USER.BROWNIE_POINT    AS BROWNIEPOINT,
                           NVL(REPLY.REPLY_CNT, 0)       AS REPLYCNT,
                           NVL(HIT.HIT_CNT, 0)           AS HITCNT,
                           NVL(LIKE_BOARD.LIKE_CNT, 0)   AS LIKECNT,
                           NVL(LIKE_BOARD.UNLIKE_CNT, 0) AS UNLIKECNT
                    FROM (SELECT *
                          FROM BROWNIE_BOARD
                          WHERE 1=1
        ]]>
        <if test="boardSeq isNotNull and boardSeq isNotEmpty">
            <![CDATA[
                            AND BROWNIE_BOARD.BOARD_SEQ = #{boardSeq}
        ]]>
        </if>
        <if test="boardKind isNotNull and boardKind isNotEmpty">
            <![CDATA[
                            AND UPPER(BROWNIE_BOARD.BOARD_KIND) = UPPER(#{boardKind})
        ]]>
        </if>
        <if test="boardCategory isNotNull and boardCategory isNotEmpty">
            <![CDATA[
                            AND UPPER(BROWNIE_BOARD.BOARD_CATEGORY) = UPPER(#{boardCategory})
        ]]>
        </if>
        <if test="title isNotNull and title isNotEmpty">
            <![CDATA[
                            AND UPPER(BROWNIE_BOARD.TITLE) LIKE UPPER('%'||#{title}||'%')
        ]]>
        </if>
        <if test="content isNotNull and content isNotEmpty">
            <![CDATA[
                            AND UPPER(BROWNIE_BOARD.CONTENT) LIKE UPPER('%'||#{content}||'%')
        ]]>
        </if>
        <if test="noticeYn isNotNull and noticeYn isNotEmpty">
            <![CDATA[
                            AND UPPER(BROWNIE_BOARD.NOTICE_YN) = UPPER(#{noticeYn})
        ]]>
        </if>
        <if test="boardStatus isNotNull and boardStatus isNotEmpty">
            <![CDATA[
                            AND UPPER(BROWNIE_BOARD.STATUS) = UPPER(#{boardStatus})
        ]]>
        </if>
        <![CDATA[
                           ) BROWNIE_BOARD
                                INNER JOIN (SELECT *
                                            FROM BROWNIE_USER
                                            WHERE 1=1
                                    ]]>
        <if test="nickName isNotNull and nickName isNotEmpty">
            <![CDATA[
                                              AND UPPER(NICK_NAME) = UPPER(#{nickName})
        ]]>
        </if>
        <if test="userId isNotNull and userId isNotEmpty">
            <![CDATA[
                                              AND UPPER(USER_ID) = UPPER(#{userId})
        ]]>
        </if>
        <![CDATA[
                                                ) BROWNIE_USER ON BROWNIE_BOARD.IN_USER_ID = BROWNIE_USER.USER_ID
                                LEFT OUTER JOIN (SELECT BOARD_SEQ,
                                                        COUNT(*) AS REPLY_CNT
                                                 FROM BROWNIE_BOARD_REPLY
                                                 GROUP BY BOARD_SEQ) REPLY ON BROWNIE_BOARD.BOARD_SEQ = REPLY.BOARD_SEQ
                                LEFT OUTER JOIN (SELECT BOARD_SEQ,
                                                        COUNT(*) AS HIT_CNT
                                                 FROM BROWNIE_BOARD_HIT
                                                 GROUP BY BOARD_SEQ) HIT ON BROWNIE_BOARD.BOARD_SEQ = HIT.BOARD_SEQ
                                LEFT OUTER JOIN (SELECT BOARD_SEQ, UNLIKE_CNT, LIKE_CNT
                                                 FROM (SELECT BOARD_SEQ, KIND FROM BROWNIE_BOARD_LIKE) PIVOT (
                                                     COUNT(*)
                                                     FOR KIND
                                                     IN (0 AS UNLIKE_CNT, 1 AS LIKE_CNT))) LIKE_BOARD
                                                ON BROWNIE_BOARD.BOARD_SEQ = LIKE_BOARD.BOARD_SEQ
                       ORDER BY BROWNIE_BOARD.BOARD_SEQ
                      )
             )
        ]]>
        <if test="replyPerPage isNotNull and replyPerPage isNotEmpty and pageNum isNotNull and pageNum isNotEmpty">
            <![CDATA[
        WHERE #{contentPerPage} * (#{pageNum} - 1) < RN
          AND RN <= #{contentPerPage} * #{pageNum}
        ]]>
        </if>
    </select>

    <select id="select" parameterType="hashMap" resultType="kr.co.brownie.board.service.BoardVO">
        <![CDATA[
        SELECT BOARDSEQ,
               BOARDKIND,
               BOARDCATEGORY,
               TITLE,
               CONTENT,
               NOTICEYN,
               BOARDSTATUS,
               BOARDINDATE,
               BOARDINUSERID,
               BOARDUPDATE,
               BOARDUPUSERID,
               FILESEQ,
               SUBSEQ,
               USERID,
               LOLID,
               NICKNAME,
               BLACKSTACK,
               USERSTATUS,
               USERINDATE,
               USERUPDATE,
               USERINUSERID,
               USERUPUSERID,
               USERPOSITION,
               BROWNIEPOINT,
               REPLYCNT,
               HITCNT,
               LIKECNT,
               UNLIKECNT
        FROM (SELECT ROWNUM AS RN,
                     *
              FROM (SELECT BROWNIE_BOARD.BOARD_SEQ       AS BOARDSEQ,
                           BROWNIE_BOARD.BOARD_KIND      AS BOARDKIND,
                           BROWNIE_BOARD.BOARD_CATEGORY  AS BOARDCATEGORY,
                           BROWNIE_BOARD.TITLE           AS TITLE,
                           BROWNIE_BOARD.CONTENT         AS CONTENT,
                           BROWNIE_BOARD.NOTICE_YN       AS NOTICEYN,
                           BROWNIE_BOARD.STATUS          AS BOARDSTATUS,
                           BROWNIE_BOARD.IN_DATE         AS BOARDINDATE,
                           BROWNIE_BOARD.IN_USER_ID      AS BOARDINUSERID,
                           BROWNIE_BOARD.UP_DATE         AS BOARDUPDATE,
                           BROWNIE_BOARD.UP_USER_ID      AS BOARDUPUSERID,
                           BROWNIE_BOARD.FILE_SEQ        AS FILESEQ,
                           BROWNIE_BOARD.SUB_SEQ         AS SUBSEQ,
                           BROWNIE_USER.USER_ID          AS USERID,
                           BROWNIE_USER.LOL_ID           AS LOLID,
                           BROWNIE_USER.NICK_NAME        AS NICKNAME,
                           BROWNIE_USER.BLACK_STACK      AS BLACKSTACK,
                           BROWNIE_USER.STATUS           AS USERSTATUS,
                           BROWNIE_USER.IN_DATE          AS USERINDATE,
                           BROWNIE_USER.UP_DATE          AS USERUPDATE,
                           BROWNIE_USER.IN_USER_ID       AS USERINUSERID,
                           BROWNIE_USER.UP_USER_ID       AS USERUPUSERID,
                           BROWNIE_USER.USER_POSITION    AS USERPOSITION,
                           BROWNIE_USER.BROWNIE_POINT    AS BROWNIEPOINT,
                           NVL(REPLY.REPLY_CNT, 0)       AS REPLYCNT,
                           NVL(HIT.HIT_CNT, 0)           AS HITCNT,
                           NVL(LIKE_BOARD.LIKE_CNT, 0)   AS LIKECNT,
                           NVL(LIKE_BOARD.UNLIKE_CNT, 0) AS UNLIKECNT
                    FROM (SELECT *
                          FROM BROWNIE_BOARD
                          WHERE 1=1
        ]]>
        <if test="boardSeq isNotNull and boardSeq isNotEmpty">
            <![CDATA[
                            AND BROWNIE_BOARD.BOARD_SEQ = #{boardSeq}
        ]]>
        </if>
        <if test="boardKind isNotNull and boardKind isNotEmpty">
            <![CDATA[
                            AND UPPER(BROWNIE_BOARD.BOARD_KIND) = UPPER(#{boardKind})
        ]]>
        </if>
        <if test="boardCategory isNotNull and boardCategory isNotEmpty">
            <![CDATA[
                            AND UPPER(BROWNIE_BOARD.BOARD_CATEGORY) = UPPER(#{boardCategory})
        ]]>
        </if>
        <if test="title isNotNull and title isNotEmpty">
            <![CDATA[
                            AND UPPER(BROWNIE_BOARD.TITLE) LIKE UPPER('%'||#{title}||'%')
        ]]>
        </if>
        <if test="content isNotNull and content isNotEmpty">
            <![CDATA[
                            AND UPPER(BROWNIE_BOARD.CONTENT) LIKE UPPER('%'||#{content}||'%')
        ]]>
        </if>
        <if test="noticeYn isNotNull and noticeYn isNotEmpty">
            <![CDATA[
                            AND UPPER(BROWNIE_BOARD.NOTICE_YN) = UPPER(#{noticeYn})
        ]]>
        </if>
        <if test="boardStatus isNotNull and boardStatus isNotEmpty">
            <![CDATA[
                            AND UPPER(BROWNIE_BOARD.STATUS) = UPPER(#{boardStatus})
        ]]>
        </if>
        <![CDATA[
                           ) BROWNIE_BOARD
                                INNER JOIN (SELECT *
                                            FROM BROWNIE_USER
                                            WHERE 1=1
                                    ]]>
        <if test="nickName isNotNull and nickName isNotEmpty">
            <![CDATA[
                                              AND UPPER(NICK_NAME) = UPPER(#{nickName})
        ]]>
        </if>
        <if test="userId isNotNull and userId isNotEmpty">
            <![CDATA[
                                              AND UPPER(USER_ID) = UPPER(#{userId})
        ]]>
        </if>
        <![CDATA[
                                                ) BROWNIE_USER ON BROWNIE_BOARD.IN_USER_ID = BROWNIE_USER.USER_ID
                                LEFT OUTER JOIN (SELECT BOARD_SEQ,
                                                        COUNT(*) AS REPLY_CNT
                                                 FROM BROWNIE_BOARD_REPLY
                                                 GROUP BY BOARD_SEQ) REPLY ON BROWNIE_BOARD.BOARD_SEQ = REPLY.BOARD_SEQ
                                LEFT OUTER JOIN (SELECT BOARD_SEQ,
                                                        COUNT(*) AS HIT_CNT
                                                 FROM BROWNIE_BOARD_HIT
                                                 GROUP BY BOARD_SEQ) HIT ON BROWNIE_BOARD.BOARD_SEQ = HIT.BOARD_SEQ
                                LEFT OUTER JOIN (SELECT BOARD_SEQ, UNLIKE_CNT, LIKE_CNT
                                                 FROM (SELECT BOARD_SEQ,
                                                              KIND
                                                       FROM BROWNIE_BOARD_LIKE) PIVOT (
                                                     COUNT(*)
                                                     FOR KIND
                                                     IN (0 AS UNLIKE_CNT, 1 AS LIKE_CNT))) LIKE_BOARD
                                                ON BROWNIE_BOARD.BOARD_SEQ = LIKE_BOARD.BOARD_SEQ
                       ORDER BY BROWNIE_BOARD.BOARD_SEQ
                      )
             )
        ]]>
        <if test="replyPerPage isNotNull and replyPerPage isNotEmpty and pageNum isNotNull and pageNum isNotEmpty">
            <![CDATA[
        WHERE #{contentPerPage} * (#{pageNum} - 1) < RN
          AND RN <= #{contentPerPage} * #{pageNum}
        ]]>
        </if>
    </select>

    <insert id="insert" parameterType="hashMap">
        <![CDATA[
        INSERT INTO BROWNIE_BOARD(
                                  ]]>
        <if test="boardKind isNotNull and boardKind isNotEmpty">
            <![CDATA[
                                  BOARD_KIND,
                                  ]]>
        </if>
        <if test="boardCategory isNotNull and boardCategory isNotEmpty">
            <![CDATA[
                                  BOARD_CATEGORY,
                                  ]]>
        </if>
        <![CDATA[
                                  TITLE,
                                  CONTENT,
                                                                    ]]>
        <if test="noticeYn isNotNull and noticeYn isNotEmpty">
            <![CDATA[
                                  NOTICE_YN,
                                  ]]>
        </if>
        <if test="status isNotNull and status isNotEmpty">
            <![CDATA[
                                  STATUS,
                                  ]]>
        </if>
        <![CDATA[
                                  IN_USER_ID,
                                  UP_USER_ID
                                  ]]>
        <if test="fileSeq isNotNull and fileSeq isNotEmpty">
            <![CDATA[
                                , FILE_SEQ
                                  ]]>
        </if>
        <if test="subSeq isNotNull and subSeq isNotEmpty">
            <![CDATA[
                                , SUB_SEQ
                                  ]]>
        </if>
        <![CDATA[
                                  )
        VALUES (
                                                  ]]>
        <if test="boardKind isNotNull and boardKind isNotEmpty">
            <![CDATA[
                #{boardKind},
                ]]>
        </if>
        <if test="boardKind isNotNull and boardKind isNotEmpty">
            <![CDATA[
                #{boardCategory},
                ]]>
        </if>
        <![CDATA[
                #{title},
                #{content},
                                                                                    ]]>
        <if test="noticeYn isNotNull and noticeYn isNotEmpty">
            <![CDATA[
                #{noticeYn},
                ]]>
        </if>
        <if test="status isNotNull and status isNotEmpty">
            <![CDATA[
                #{status},
]]>
        </if>
        <![CDATA[
                #{userId},
                #{userId}
                ]]>
        <if test="fileSeq isNotNull and fileSeq isNotEmpty">
            <![CDATA[
              , #{fileSeq}
                                  ]]>
        </if>
        <if test="subSeq isNotNull and subSeq isNotEmpty">
            <![CDATA[
              , #{subSeq}
                                  ]]>
        </if>
        <![CDATA[
              )
        ]]>
    </insert>

    <update id="update">
        <![CDATA[
        UPDATE BROWNIE_BOARD
        SET UP_USER_ID     = #{userId}
          , UP_DATE        = SYSDATE
        ]]>
        <if test="boardKind isNotNull and boardKind isNotEmpty">
            <![CDATA[
          , BOARD_KIND     = #{boardKind}
                                  ]]>
        </if>
        <if test="boardCategory isNotNull and boardCategory isNotEmpty">
            <![CDATA[
          , BOARD_CATEGORY = #{boardCategory}
                                  ]]>
        </if>
        <if test="title isNotNull and title isNotEmpty">
            <![CDATA[
          , TITLE = #{title}
                                  ]]>
        </if>
        <if test="content isNotNull and content isNotEmpty">
            <![CDATA[
          , CONTENT = #{content}
                                  ]]>
        </if>
        <if test="noticeYn isNotNull and noticeYn isNotEmpty">
            <![CDATA[
          , NOTICE_YN = #{noticeYn}
                                  ]]>
        </if>
        <if test="status isNotNull and status isNotEmpty">
            <![CDATA[
          , STATUS = #{status}
                                  ]]>
        </if>
        <if test="fileSeq isNotNull and fileSeq isNotEmpty">
            <![CDATA[
          , FILE_SEQ = #{fileSeq}
                                  ]]>
        </if>
        <if test="subSeq isNotNull and subSeq isNotEmpty">
            <![CDATA[
          , SUB_SEQ = #{subSeq}
                                  ]]>
        </if>
        <![CDATA[
        WHERE BOARD_SEQ = #{boardSeq}
        ]]>
    </update>

    <delete id="delete">
        DELETE
        FROM BROWNIE_BOARD
        WHERE BOARD_SEQ = #{boardSeq}
    </delete>
</mapper>