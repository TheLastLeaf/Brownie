<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.brownie.tip.service.impl.TipMapper">
    <select id="selectTipList" parameterType="hashMap" resultType="kr.co.brownie.tip.service.TipVO">
        <![CDATA[
        SELECT BOARDSEQ,
               BOARDKIND,
               BOARDCATEGORY,
               TITLE,
               CONTENT,
               NOTICEYN,
               STATUS,
               INDATE,
               INUSERID,
               "UPDATE",
               UPUSERID,
               LOLID,
               NICKNAME,
               REPLYCNT
        FROM (SELECT BOARDSEQ,
                     BOARDKIND,
                     BOARDCATEGORY,
                     TITLE,
                     CONTENT,
                     NOTICEYN,
                     STATUS,
                     INDATE,
                     INUSERID,
                     "UPDATE",
                     UPUSERID,
                     LOLID,
                     NICKNAME,
                     REPLYCNT,
                     ROWNUM AS RN
              FROM (SELECT BROWNIE_BOARD.BOARD_SEQ      AS BOARDSEQ,
                           BROWNIE_BOARD.BOARD_KIND     AS BOARDKIND,
                           BROWNIE_BOARD.BOARD_CATEGORY AS BOARDCATEGORY,
                           BROWNIE_BOARD.TITLE          AS TITLE,
                           BROWNIE_BOARD.CONTENT        AS CONTENT,
                           BROWNIE_BOARD.NOTICE_YN      AS NOTICEYN,
                           BROWNIE_BOARD.STATUS         AS STATUS,
                           BROWNIE_BOARD.IN_DATE        AS INDATE,
                           BROWNIE_BOARD.IN_USER_ID     AS INUSERID,
                           BROWNIE_BOARD.UP_DATE        AS "UPDATE",
                           BROWNIE_BOARD.UP_USER_ID     AS UPUSERID,
                           BROWNIE_USER.LOL_ID          AS LOLID,
                           BROWNIE_USER.NICK_NAME       AS NICKNAME,
                           NVL(REPLY.CNT, 0)            AS REPLYCNT
                    FROM BROWNIE_BOARD
                             LEFT OUTER JOIN BROWNIE_USER ON BROWNIE_BOARD.IN_USER_ID = BROWNIE_USER.USER_ID
                             LEFT OUTER JOIN (SELECT BOARD_SEQ, COUNT(*) AS CNT FROM REPLY GROUP BY BOARD_SEQ) REPLY
                                             ON BROWNIE_BOARD.BOARD_SEQ = REPLY.BOARD_SEQ
                    WHERE UPPER(BROWNIE_BOARD.BOARD_KIND) = 'TIP'
                      AND (#{champion} IS NULL OR BROWNIE_BOARD.BOARD_CATEGORY = #{champion})
                    ORDER BY BROWNIE_BOARD.BOARD_SEQ DESC
                   )
             )
        WHERE ${contentPerPage} * (${currentPageNumber} - 1) < RN
          AND RN <= ${contentPerPage} * ${currentPageNumber}
        ]]>
    </select>

    <select id="countTipList" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM BROWNIE_BOARD
        WHERE UPPER(BROWNIE_BOARD.BOARD_KIND) = 'TIP'
          AND (#{champion} IS NULL OR BOARD_CATEGORY = #{champion})
    </select>

    <select id="select" parameterType="int" resultType="kr.co.brownie.tip.service.TipVO">
        SELECT BROWNIE_BOARD.BOARD_SEQ      AS BOARDSEQ,
               BROWNIE_BOARD.BOARD_KIND     AS BOARDKIND,
               BROWNIE_BOARD.BOARD_CATEGORY AS BOARDCATEGORY,
               BROWNIE_BOARD.TITLE          AS TITLE,
               BROWNIE_BOARD.CONTENT        AS CONTENT,
               BROWNIE_BOARD.NOTICE_YN      AS NOTICEYN,
               BROWNIE_BOARD.STATUS         AS STATUS,
               BROWNIE_BOARD.IN_DATE        AS INDATE,
               BROWNIE_BOARD.IN_USER_ID     AS INUSERID,
               BROWNIE_BOARD.UP_DATE        AS "UPDATE",
               BROWNIE_BOARD.UP_USER_ID     AS UPUSERID,
               BROWNIE_USER.LOL_ID          AS LOLID,
               BROWNIE_USER.NICK_NAME       AS NICKNAME,
               NVL(REPLY.CNT, 0)            AS REPLYCNT
        FROM BROWNIE_BOARD
                 LEFT OUTER JOIN BROWNIE_USER ON BROWNIE_BOARD.IN_USER_ID = BROWNIE_USER.USER_ID
                 LEFT OUTER JOIN (SELECT BOARD_SEQ, COUNT(*) AS CNT FROM REPLY GROUP BY BOARD_SEQ) REPLY
                                 ON BROWNIE_BOARD.BOARD_SEQ = REPLY.BOARD_SEQ
        WHERE UPPER(BROWNIE_BOARD.BOARD_KIND) = 'TIP'
          AND BROWNIE_BOARD.BOARD_SEQ = ${boardSeq}
    </select>

    <insert id="insert" parameterType="hashMap">
        INSERT INTO BROWNIE_BOARD(BOARD_SEQ,
                                  BOARD_KIND,
                                  BOARD_CATEGORY,
                                  TITLE,
                                  CONTENT,
                                  NOTICE_YN,
                                  STATUS,
                                  IN_DATE,
                                  IN_USER_ID,
                                  UP_DATE,
                                  UP_USER_ID,
                                  FILE_SEQ,
                                  SUB_SEQ)
        VALUES ((SELECT NVL(MAX(BOARD_SEQ), 0) + 1
                 FROM BROWNIE_BOARD),
                'tip',
                #{champion},
                #{title},
                #{content},
                'n',
                '1',
                SYSDATE,
                '${author}',
                SYSDATE,
                '${author}',
                null,
                null)
    </insert>

    <update id="update" parameterType="hashMap">
        UPDATE BROWNIE_BOARD
        SET BOARD_CATEGORY = #{champion},
            TITLE          = #{title},
            CONTENT        = #{content},
            UP_DATE        = SYSDATE,
            UP_USER_ID     = #{author}
        WHERE BOARD_SEQ = #{boardSeq}
    </update>

    <delete id="delete" parameterType="int">
        DELETE
        FROM BROWNIE_BOARD
        WHERE BOARD_SEQ = #{boardSeq}
    </delete>

    <select id="selectReplyList" parameterType="hashMap" resultType="kr.co.brownie.tip.service.TipReplyVO">
        <![CDATA[
        SELECT LV,
               REPLYSEQ,
               REPLYCONTENT,
               INDATE,
               INUSERID,
               "UPDATE",
               UPUSERID,
               BOARDSEQ,
               HEADREPLYSEQ,
               STATUS,
               LOLID,
               NICKNAME
        FROM (SELECT LV,
                     REPLYSEQ,
                     REPLYCONTENT,
                     INDATE,
                     INUSERID,
                     "UPDATE",
                     UPUSERID,
                     BOARDSEQ,
                     HEADREPLYSEQ,
                     STATUS,
                     LOLID,
                     NICKNAME,
                     ROWNUM AS RN
              FROM (SELECT LEVEL                  AS LV,
                           REPLY.REPLY_SEQ        AS REPLYSEQ,
                           REPLY.REPLY_CONTENT    AS REPLYCONTENT,
                           REPLY.IN_DATE          AS INDATE,
                           REPLY.IN_USER_ID       AS INUSERID,
                           REPLY.UP_DATE          AS "UPDATE",
                           REPLY.UP_USER_ID       AS UPUSERID,
                           REPLY.BOARD_SEQ        AS BOARDSEQ,
                           REPLY.HEAD_REPLY_SEQ   AS HEADREPLYSEQ,
                           REPLY.STATUS           AS STATUS,
                           BROWNIE_USER.LOL_ID    AS LOLID,
                           BROWNIE_USER.NICK_NAME AS NICKNAME
                    FROM REPLY
                             LEFT OUTER JOIN BROWNIE_USER ON (REPLY.IN_USER_ID = BROWNIE_USER.USER_ID)
                    WHERE REPLY.BOARD_SEQ = ${boardSeq} START
                    WITH REPLY.HEAD_REPLY_SEQ IS NULL
                    CONNECT BY PRIOR REPLY.REPLY_SEQ = REPLY.HEAD_REPLY_SEQ
                   )
             )
        WHERE ${replyPerPage} * (${currentReplyPageNumber} - 1) < RN
          AND RN <= ${replyPerPage} * ${currentReplyPageNumber}
        ]]>
    </select>

    <insert id="insertReply" parameterType="hashMap">
        INSERT INTO REPLY
        (REPLY_CONTENT,
         IN_USER_ID,
         UP_USER_ID,
         BOARD_SEQ,
         HEAD_REPLY_SEQ)
        VALUES (#{message},
                #{author},
                #{author},
                #{boardSeq},
                #{headReplySeq})
    </insert>

    <select id="selectReply" parameterType="hashMap" resultType="kr.co.brownie.tip.service.TipReplyVO">
        SELECT '1'                    AS LV,
               REPLY.REPLY_SEQ        AS REPLYSEQ,
               REPLY.REPLY_CONTENT    AS REPLYCONTENT,
               REPLY.IN_DATE          AS INDATE,
               REPLY.IN_USER_ID       AS INUSERID,
               REPLY.UP_DATE          AS "UPDATE",
               REPLY.UP_USER_ID       AS UPUSERID,
               REPLY.BOARD_SEQ        AS BOARDSEQ,
               REPLY.HEAD_REPLY_SEQ   AS HEADREPLYSEQ,
               REPLY.STATUS           AS STATUS,
               BROWNIE_USER.LOL_ID    AS LOLID,
               BROWNIE_USER.NICK_NAME AS NICKNAME
        FROM REPLY
                 LEFT OUTER JOIN BROWNIE_USER ON (REPLY.IN_USER_ID = BROWNIE_USER.USER_ID)
        WHERE BOARD_SEQ = ${boardSeq}
          AND REPLY_SEQ = ${replySeq}
    </select>

    <delete id="deleteReply" parameterType="hashMap">
        DELETE
        FROM REPLY
        WHERE REPLY_SEQ = ${replySeq}
    </delete>
</mapper>